
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Avatar, AvatarImage } from "@/components/ui/avatar";
import { Button } from "@/components/ui/button";
import { useToast } from "@/hooks/use-toast";
import { supabase } from "@/integrations/supabase/client";
import type { Strategy } from "@/types/strategy";
import ReactMarkdown from 'react-markdown';

interface StrategyViewerProps {
  strategy: Strategy;
  onApprove?: () => void;
  onRetry?: () => void;
}

export function StrategyViewer({ strategy, onApprove, onRetry }: StrategyViewerProps) {
  const { toast } = useToast();
  const navigate = useNavigate();
  const [showRetry, setShowRetry] = useState(false);
  
  const handleApprove = async () => {
    try {
      await supabase
        .from('strategies')
        .update({
          status: 'approved',
          approved_at: new Date().toISOString()
        })
        .eq('id', strategy.id);

      toast({
        title: "Strategy approved",
        description: "The strategy has been approved and is now active",
      });

      onApprove?.();
      navigate('/dashboard');
    } catch (error) {
      toast({
        title: "Error approving strategy",
        description: "Could not approve the strategy. Please try again.",
        variant: "destructive"
      });
    }
  };

  const handleRetry = async () => {
    onRetry?.();
    setShowRetry(false);
  };

  return (
    <div className="rounded-md p-6 border bg-card">
      <div className="flex items-center gap-4 mb-4">
        <Avatar>
          <AvatarImage src="/avatars/ceo-agent.png" alt="CEO Agent" />
        </Avatar>
        <div>
          <p className="text-sm font-medium">
            Generated by <span className="text-primary">{strategy.generated_by || 'CEO Agent'}</span>
          </p>
          <p className="text-xs text-muted-foreground">AI-powered strategic advisor</p>
        </div>
      </div>

      <article className="prose max-w-full dark:prose-invert mb-4">
        <ReactMarkdown>{strategy.description || ''}</ReactMarkdown>
      </article>

      <div className="flex gap-4">
        <Button onClick={handleApprove} className="gap-2">
          <span>✅</span> Approve
        </Button>
        <Button 
          variant="outline" 
          onClick={() => setShowRetry(true)}
          className="gap-2"
        >
          <span>❌</span> Decline
        </Button>
      </div>

      {showRetry && (
        <div className="mt-4 p-4 border rounded-md bg-muted">
          <p className="text-sm mb-2">Would you like the CEO Agent to revise this strategy?</p>
          <Button onClick={handleRetry} variant="secondary" className="gap-2">
            <span>🔁</span> Regenerate Strategy
          </Button>
        </div>
      )}
    </div>
  );
}
